<div id="order-history" class="container">
    <h4>주문정보</h4>
    <hr />
</div>

<script>
  $.ajax({
    type: 'GET',
    url: '/api/order',
    headers: {
      Authorization: `Bearer ${tokens.accessToken}`,
      Refresh: `${tokens.refreshToken}`,
    },
    success: function (response) {
      if (response.orders[0].Orders.length < 1) {
        const emptyOrderHistoryHTML = `
          <ul class="list-group mb-3">
            <li class="list-group-item d-flex justify-content-between lh-sm">
              <div>
                <h6 class="my-0">주문정보가 없습니다.</h6>
              </div>
            </li>
          </ul>
          <a href="/menu" class="btn btn-dark w-100" >메뉴 고르기</a>
        `
        $('#order-history').append(emptyOrderHistoryHTML);
      }

      const orderListHTML = response.orders[0].Orders.map(order => {
        //오더테이블 최신순 오름차순 정렬
        const TIME_ZONE = 9 * 60 * 60 * 1000;
        const date = new Date(order.createdAt)
        const orderTime = new Date(date.getTime() + TIME_ZONE).toISOString().replace('T', ' ').slice(0, -5);
        const {orderId: id, contactAddress, memo, orderStatus: status} = order
        let totalPlace = 0
        
        const changeClassByStatus = 
          orderStatus === 0 
            ? 'dark' 
            : orderStatus === 1 
            ? 'primary' 
            : orderStatus === 2 
            ? 'secondary' 
            : ''

        const changeClassCompleted = 
          orderStatus === 0 || orderStatus === 1 
            ? 'dark'
            : orderStatus === 2 
            ? 'secondary'
            : ''
        
        return `
          <div class="card border-${changeClassByStatus} mb-3" style="max-width: 18rem">
            <div class="card-header border-${changeClassByStatus} text-${changeClassByStatus}">
              ${orderStatus === 0 ? '배달대기' 
                : orderStatus === 1 ? '배달중' 
                : orderStatus === 2 ? '배달 완료' 
                : ''}
              </div>
            <div class="card-body">
              <div class="list-group mb-3">
                <div class="list-group-item list-group-item-action">
                  <h6 class="text-${changeClassCompleted}"><b>주문번호</b></h6>
                  <p class="text-body-secondary">${orderId}</p>

                  <h6 class="text-${changeClassCompleted}"><b>주문일시</b></h6>
                  <p class="text-body-secondary">${orderTime}</p>

                  <h6 class="text-${changeClassCompleted}"><b>배달주소</b></h6>
                  <p class="text-body-secondary">${contactAddress}</p>

                  <h6 class="text-${changeClassCompleted}"><b>요청사항</b></h6>
                  <p class="text-body-secondary">${memo}</p>
                </div>
              </div>

              <ul class="list-group order-menu-list-by-${orderId}">
                ${
                  order.Menus.map(menu => {
                    const {
                      menuName, 
                      menuPrice, 
                      Order_Menu: {
                        quantity: menuQuantity
                      }
                    } = menu

                    totalPlace += menuPrice * menuQuantity

                    return `
                      <li class="list-group-item d-flex justify-content-between align-items-center text-${changeClassCompleted}">
                        ${menuName}
                        <span class="badge bg-${changeClassCompleted} rounded-pill">${menuQuantity}</span>
                      </li>
                    `
                  }).join('')
                }
                <li class="list-group-item d-flex justify-content-between align-items-center text-${changeClassCompleted}">
                  결제금액
                  <strong class="text-${changeClassCompleted}">${totalPlace}원</strong>
                </li>
              </ul>
            </div>
          </div>
        `
      }).join('');
      
      $('#order-history').append(orderListHTML)
    },
    error: function (err) {
      alert(err.responseJSON.message)
    },
  });
</script>
